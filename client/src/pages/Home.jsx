import React, { useState, useEffect } from "react";
import { Loader, card, FormField } from "../components";

const renderCards = (data, title) => {
  if (data.length > 0)
    return data.map((post) => <card key={post.id} {...post} />);
  return (
    <h2 className="mt-5 font-bold color-blue text-xl-uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  //const [posts, setPosts] = useState([]);
  const [allposts, setAllPosts] = useState(null);
  const [searchtext, setSearchtext] = useState(true);

  useEffect(() => {
    const fetchposts = async () => {
      setLoading(true);
      try {
        const response = await fetch("http://localhost:8080/api/v1/posts", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            // 'Accept': 'application/json'
          },
        });
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (error) {
        alert(error);
      } finally {
        setLoading: false;
      }
    };
  });
  return (
    <section className="max w-7x1 mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-32px">
          Community Showcase
        </h1>
        <p className="mt-2 text-green-400 text-16px max-w-500px">
          Browse through these beautiful images generated by AI
        </p>
      </div>
      <div className="mt-16">
        <FormField />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchtext && (
              <h2 className="font-medium text-green-400 text-xl mb-3">
                Showing results for{" "}
                <span className="text-black">{searchtext}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchtext ? (
                <renderCards data={allposts} title="No Search Results Found" />
              ) : (
                <renderCards data={allposts} title="No Posts Yet" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
